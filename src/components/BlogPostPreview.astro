---
import "../styles/blog.css";

export interface Props {
  title: string;
  description: string;
  readingTime: string;
  publishDate: string;
  url: string;
  tags: string[];
  image?: {
    src: string;
    alt: string;
    height?: number;
    width?: number;
  };
}

const {
  title,
  description,
  publishDate,
  url,
  tags = [],
  image,
  readingTime,
} = Astro.props as Props;

const publishDateFormated = new Date(publishDate).toLocaleDateString("en-US", {
  weekday: "long",
  year: "numeric",
  month: "short",
  day: "numeric",
});
---

<div
  class="post rounded-md overflow-hidden mb-2.5 border-solid border-2"
>
  <a class="flex" href={url}>
    <img
      width={image.width ?? "40px"}
      height={image.height ?? "40px"}
      class="hidden sm:inline-block px-3"
      loading="lazy"
      src={image.src}
      alt={image.alt}
    />
    <div class="py-4 px-3 sm:px-0">
        <div class="post-text font-bold text-xl mb-2 z-[1]">{title}</div>
      <div class="flex">
        <p class="post-text text-gray-400 z-[1]">{publishDateFormated}</p>
        <p class="post-text text-gray-400 z-[1] ml-1 mr-1">â€¢</p>
        <p class="post-text text-gray-400 z-[1]">{readingTime}</p>
      </div>
      <p class="post-text text-gray-700 text-base z-[1]">
        {description}
      </p>
      <div class="pt-4 pb-2">
        {
          tags.map((tag) => (
            <span class="post-text post-item inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 z-[1]">
              #{tag}
            </span>
          ))
        }
      </div>
    </div>
</a>
</div>

<style>
  a {
    color: inherit;
    text-decoration: none !important;
  }
</style>
