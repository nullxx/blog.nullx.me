---
import HeadCommon from "../components/HeadCommon.astro";
import HeadSEO from "../components/HeadSEO.astro";
import Header from "../components/Header/Header.astro";
import PageContent from "../components/PageContent/PageContent.astro";
import RightSidebar from "../components/RightSidebar/RightSidebar.astro";
import * as CONFIG from "../config";
const { frontmatter = {}, headings } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const currentPage = Astro.url.pathname;
const extension = frontmatter.file.split(".").pop();
const currentFile = `src/pages${currentPage.replace(/\/$/, "")}.${extension}`;
const githubEditUrl =
  CONFIG.GITHUB_EDIT_URL && CONFIG.GITHUB_EDIT_URL + currentFile;
---

<html
  dir={frontmatter.dir ?? "ltr"}
  lang={frontmatter.lang ?? "en-us"}
  class="initial"
>
  <head>
    <HeadCommon />
    <HeadSEO {frontmatter} canonicalURL={canonicalURL} />
    <title>
      {
        frontmatter.title
          ? `${frontmatter.title} ðŸš€ ${CONFIG.SITE.title}`
          : CONFIG.SITE.title
      }
    </title>
    <style>
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: 0.5rem;
        --doc-padding: 2rem;
      }
      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns:
          minmax(var(--gutter), 1fr)
          minmax(0, var(--max-width))
          minmax(var(--gutter), 1fr);
        overflow-x: hidden;
      }
      .layout :global(> *) {
        width: 100%;
        height: 100%;
      }
      .grid-sidebar {
        height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }
      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }
      #grid-right {
        display: none;
      }
      :global(.mobile-sidebar-toggle) {
        overflow: hidden;
      }
      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns:
            20rem
            minmax(0, var(--max-width));
          gap: 1em;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns:
            20rem
            minmax(0, var(--max-width))
            18rem;
          padding-left: 0;
          padding-right: 0;
          margin: 0 auto;
        }
        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main class="layout">
      <div id="grid-main">
        <PageContent {frontmatter} {headings} githubEditUrl={githubEditUrl}>
          <slot />
        </PageContent>
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <RightSidebar {headings} githubEditUrl={githubEditUrl} />
      </aside>
    </main>
    <script defer>
      document.querySelectorAll(".language-id").forEach((e) => {
        const el = document.createElement('div');
        el.className = 'language-' + e.textContent;
        e.parentNode.replaceChild(el, e);
      });
    </script>
  </body>
</html>
